version: 2.1

orbs:
  win: circleci/windows@2.2.0

defaults: &defaults_unix
  resource_class: small
  docker:
    - image: node:14
  working_directory: ~/snyk-java-call-graph-builder

windows_defaults: &defaults_windows
  environment:
    npm_config_loglevel: silent
  executor:
    name: win/default
  working_directory: ~/snyk-java-call-graph-builder

commands:
  install_deps:
    description: Install dependencies
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-npm-cache-{{ checksum "package.json" }}
            - v1-npm-cache-
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
      - save_cache:
          key: v1-npm-cache-{{ checksum "package.json" }}
          paths:
            - ~/.npm
      - persist_to_workspace:
          root: .
          paths:
            - node_modules/
  install_deps_windows:
    description: Install dependencies on Windows
    steps:
      - run:
          name: Install dependencies
          command: npm install
  checkout_and_merge:
    steps:
      - checkout
      - run:
          name: Checkout master
          command: git checkout origin/master
      - run:
          name: Merge test branch
          command: |
            git config user.name "CircleCI"
            git config user.email "noop"
            git merge --no-edit "$CIRCLE_BRANCH"
      - attach_workspace:
          at: ~/snyk-java-call-graph-builder
  install_gradle_windows:
    description: Install gradle
    steps:
      - run: |
          choco install gradle
  install_sdkman:
    description: Install SDKMAN
    steps:
      - run:
          name: Installing SDKMAN
          command: |
            curl -s "https://get.sdkman.io?rcupdate=false" | bash
            echo -e '\nsource "/home/circleci/.sdkman/bin/sdkman-init.sh"' >> $BASH_ENV
            source $BASH_ENV
  install_gradle_unix:
    description: Install gradle
    steps:
      - run:
          name: Installing Gradle
          command: sdk install gradle
  install_maven_unix:
    steps:
      - run:
          name: Install java and maven
          command: |
            sudo apt-get update
            sudo apt-get install -y openjdk-8-jdk maven
  install_maven_windows:
    description: Install maven
    steps:
      - run: choco install maven
jobs:
  install:
    <<: *defaults_unix
    steps:
      - install_deps
  lint:
    <<: *defaults_unix
    steps:
      - checkout
      - attach_workspace:
          at: ~/snyk-java-call-graph-builder
      - run:
          name: Run tests
          command: npm run lint
  test-unit-unix:
    <<: *defaults_unix
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/snyk-java-call-graph-builder
      - run:
          name: Run unit tests
          command: npm run test:unit
  test-integration-unix:
    <<: *defaults_unix
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - setup_remote_docker
      - install_maven_unix
      - install_sdkman
      - install_gradle_unix
      - attach_workspace:
          at: ~/snyk-java-call-graph-builder
      - run:
          name: Run integration tests
          command: |
            npm run test:integration
  test-unit-windows:
    <<: *defaults_windows
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - install_deps_windows
      - run:
          name: Run unit tests
          command: npm run test:unit
  test-integration-windows:
    <<: *defaults_windows
    steps:
      - run: git config --global core.autocrlf false
      - checkout
      - install_deps_windows
      - install_maven_windows
      - install_gradle_windows
      - run:
          name: Run integration tests
          command: npm run test:integration
  build:
    <<: *defaults_unix
    steps:
      - checkout_and_merge
      - run:
          name: Use snyk-main npmjs user
          command: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
  release:
    <<: *defaults_unix
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: npm install
      - run:
          name: Build
          command: npm run build
      - run:
          name: Release on GitHub
          command: npx semantic-release

workflows:
  version: 2
  test_and_release:
    jobs:
      - install:
          name: Install
          context: nodejs-install
          filters:
            branches:
              ignore:
                - master
      - lint:
          name: Lint
          context: nodejs-install
          requires:
            - Install
          filters:
            branches:
              ignore:
                - master
      - build:
          name: Build
          requires:
            - Install
          filters:
            branches:
              ignore:
                - master
      - test-unit-unix:
          name: Unit Tests
          context: nodejs-install
          requires:
            - Install
          filters:
            branches:
              ignore:
                - master
      - test-integration-unix:
          name: Integration Tests
          context: nodejs-install
          requires:
            - Install
          filters:
            branches:
              ignore:
                - master
      - test-unit-windows:
          name: Unit Tests Windows
          context: nodejs-install
          filters:
            branches:
              ignore:
                - master
# CircleCI struggles to complete gradle integration test on Windows,
# while it works perfectly when SSHed into the machine. Therefore skip of
# the test on platform feels better than skip of the whole gradle
# integration test.
#- test-integration-windows:
#name: Integration Tests Windows
#context: nodejs-install
#filters:
#branches:
#ignore:
#- master
      - release:
          name: Release to GitHub
          context: nodejs-lib-release
          filters:
            branches:
              only:
                - master
